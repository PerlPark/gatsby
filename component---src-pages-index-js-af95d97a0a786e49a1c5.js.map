{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","pageTitle","pageDescription","className","articlesStyles","topics","topics__title","topics__list","allMarkdownRemark","distinct","map","value","index","key","topics__list__item","list","edges","node","id","list__item","to","frontmatter","slug","list__item__title","title","list__item__description","description","date","timeToRead","tags","query"],"mappings":"0FAAA,sHAOe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,UAAU,WAAYC,gBAAgB,sBACjD,yBAAKC,UAAWC,IAAeC,QAC7B,wBAAIF,UAAWC,IAAeE,eAA9B,UACA,wBAAIH,UAAWC,IAAeG,cAC3BP,EAAKQ,kBAAkBC,SAASC,KAAI,SAACC,EAAOC,GAAR,OACnC,wBAAIC,IAAKD,EAAOT,UAAWC,IAAeU,oBAAqBH,QAIrE,6BAASR,UAAWC,IAAeW,MAChCf,EAAKQ,kBAAkBQ,MAAMN,KAAI,gBAAGO,EAAH,EAAGA,KAAH,OAChC,6BAASJ,IAAKI,EAAKC,GAAIf,UAAWC,IAAee,YAC/C,kBAAC,IAAD,CAAMC,GAAIH,EAAKI,YAAYC,MACzB,wBAAInB,UAAWC,IAAemB,mBAAoBN,EAAKI,YAAYG,OACnE,uBAAGrB,UAAWC,IAAeqB,yBAA0BR,EAAKI,YAAYK,aACxE,kBAAC,IAAD,CAAMC,KAAMV,EAAKI,YAAYM,KAAMC,WAAYX,EAAKW,WAAYC,KAAMZ,EAAKI,YAAYQ,eAQ9F,IAAMC,EAAK","file":"component---src-pages-index-js-af95d97a0a786e49a1c5.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PageTitle from \"../components/page-title\"\nimport Info from \"../components/article-info\"\nimport articlesStyles from \"../stylesheets/articles.module.css\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <PageTitle pageTitle=\"Articles\"  pageDescription=\"차곡차곡 정리한 생각 모음 💭\" />\n      <div className={articlesStyles.topics}>\n        <h2 className={articlesStyles.topics__title}>Topics</h2>\n        <ul className={articlesStyles.topics__list}>\n          {data.allMarkdownRemark.distinct.map((value, index) => (\n            <li key={index} className={articlesStyles.topics__list__item}>{value}</li>\n          ))}\n        </ul>\n      </div>\n      <section className={articlesStyles.list}>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <article key={node.id} className={articlesStyles.list__item}>\n            <Link to={node.frontmatter.slug}>\n              <h3 className={articlesStyles.list__item__title}>{node.frontmatter.title}</h3>\n              <p className={articlesStyles.list__item__description}>{node.frontmatter.description}</p>\n              <Info date={node.frontmatter.date} timeToRead={node.timeToRead} tags={node.frontmatter.tags} />\n            </Link>\n          </article>\n        ))}\n      </section>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, filter: {frontmatter: {type: {eq: \"article\"}}}) {\n      distinct(field: frontmatter___tags)\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            slug\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}